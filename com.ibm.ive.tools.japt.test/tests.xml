<?xml version="1.0" ?>
<tests>

<!-- need test apps with stack map tables, annotations, signature attributes, enclosing method attributes -->

<!-- the following tests are java 6 and hence have stack map tables and enhanced ldc instructions -->

<testApp log="../test_output/japtedMergeCandidatesJava6.log" 
	stdout="../test_output/japtedMergeCandidatesJava6.out.txt"
	stderr="../test_output/japtedMergeCandidatesJava6.err.txt"
	jar="../test_output/japtedMergeCandidatesJava6.jar" 
	dir="../test_output/japtTests\java6">
	<commandLine>com.ibm.ive.tools.japt.testcase.mergeCandidates.TestMergeCandidates ../tests/java6</commandLine>
	<classPath>../tests\java6</classPath>
	<japtApplicationArgs>
	-includeClass com.ibm.ive.tools.japt.testcase.mergeCandidates.* 
	-includeMethod com.ibm.ive.tools.japt.testcase.mergeCandidates.App.testVerifier 
	-includeMethod com.ibm.ive.tools.japt.testcase.mergeCandidates.RestrictedClassLoader.loadClass(java.lang.String) 
	-includeMethod com.ibm.ive.tools.japt.testcase.mergeCandidates.App.&lt;init&gt;() 
	-includeMainMethod com.ibm.ive.tools.japt.testcase.mergeCandidates.TestMergeCandidates
	</japtApplicationArgs>
</testApp>

<testApp log="../test_output/japtedTestUpcastJava6.log"
	stdout="../test_output/japtedTestUpcastJava6.out.txt"
	stderr="../test_output/japtedTestUpcastJava6.err.txt"
	jar="../test_output/japtedTestUpcastJava6.jar"
	dir="../test_output/japtTests\java6">
	<commandLine>com.ibm.ive.tools.japt.testcase.TestUpcast</commandLine>
	<classPath>../tests/java6</classPath>
	<japtApplicationArgs>-includeMethod com.ibm.ive.tools.japt.testcase.TestUpcast.main(java.lang.String[])</japtApplicationArgs>
</testApp>

<testApp log="../test_output/japtedTestJSRJava6.log"
	stdout="../test_output/japtedTestJSRJava6.out.txt"
	stderr="../test_output/japtedTestJSRJava6.err.txt"
	jar="../test_output/japtedTestJSRJava6.jar"
	dir="../test_output/japtTests\java6">
	<commandLine>com.ibm.ive.tools.japt.testcase.TestJSR</commandLine>
	<classPath>../tests/java6</classPath>
	<japtApplicationArgs>-includeMethod com.ibm.ive.tools.japt.testcase.TestJSR.main(java.lang.String[])</japtApplicationArgs>
</testApp>

<testApp 
	log="../test_output/japtedJaptJava6.log"
	stdout="../test_output/japtedJaptJava6.out.txt"
	stderr="../test_output/japtedJaptJava6.err.txt"
	jar="../test_output/japtedJaptJava6.jar"
	outputIndexFromEnd="42"
	dir="../test_output/japtTests/java6">
	<commandLine>
		com.ibm.ive.tools.japt.commandLine.Main
		-loadFile ../tests\hanoi.jar
		-includeMainMethod com/ibm/ivj/examples/hanoi/Hanoi
		-cp C:\java\ibm-java-sdk-60-win-x86_64\sdk\jre\lib\rt.jar
		-obfuscate -reduce -xta -inline -inlineAllJSRs 
		-compressionInline -expandPermissions -deferClassLoads 
		-optimizeCatches -optimizeThrows -optimizeTypeChecks
		-migrateMethodBodies -coldMethod *t* -allowAccessors -expandPermissions -load -verify 
		-jarOutput -output "../test_output/hanoiOptimized.jar" 
		-noStripDebugInfo -noStripSourceInfo -noStripAnnotations -noCompress
		-includeResource *.properties
	</commandLine>
	<classPath>../tests/japt.java6.jar</classPath>
	<japtApplicationArgs>
		-includeMethod com.ibm.ive.tools.japt.commandLine.Main.main
		-includeLibraryClass com.ibm.ive.tools.japt.*Extension 
		-includeResource *.properties
		-includeMethod com.ibm.ive.tools.japt.MsgHelp$1.run()
		-includeMethod com.ibm.jikesbt.MsgHelp$1.run()
		-includeMethod com.ibm.ive.tools.japt.*.trimToSize
	</japtApplicationArgs>
</testApp>





<!-- the following tests are not java 6 and hence have no stack maps -->

<testApp 
	log="../test_output/japtedMergeCandidates.log" 
	stdout="../test_output/japtedMergeCandidates.out.txt" 
	stderr="../test_output/japtedMergeCandidates.err.txt" 
	jar="../test_output/japtedMergeCandidates.jar" 
	dir="../test_output/japtTests">
	<commandLine>com.ibm.ive.tools.japt.testcase.mergeCandidates.TestMergeCandidates ../tests</commandLine>
	<classPath>../tests</classPath>
	<japtApplicationArgs>
	-includeClass com.ibm.ive.tools.japt.testcase.mergeCandidates.* 
	-includeMethod com.ibm.ive.tools.japt.testcase.mergeCandidates.App.testVerifier 
	-includeMethod com.ibm.ive.tools.japt.testcase.mergeCandidates.RestrictedClassLoader.loadClass(java.lang.String) 
	-includeMethod com.ibm.ive.tools.japt.testcase.mergeCandidates.App.&lt;init&gt;() 
	-includeMainMethod com.ibm.ive.tools.japt.testcase.mergeCandidates.TestMergeCandidates
	</japtApplicationArgs>
</testApp>

<testApp
	log="../test_output/japtedTestUpcast.log" 
	stdout="../test_output/japtedTestUpcast.out.txt" 
	stderr="../test_output/japtedTestUpcast.err.txt" 
	jar="../test_output/japtedTestUpcast.jar" 
	dir="../test_output/japtTests">
	<commandLine>com.ibm.ive.tools.japt.testcase.TestUpcast</commandLine>
	<classPath>../tests</classPath>
	<japtApplicationArgs>-includeMethod com.ibm.ive.tools.japt.testcase.TestUpcast.main(java.lang.String[])</japtApplicationArgs>
</testApp>

<testApp
	log="../test_output/japtedTestJSR.log" 
	stdout="../test_output/japtedTestJSR.out.txt" 
	stderr="../test_output/japtedTestJSR.err.txt" 
	jar="../test_output/japtedTestJSR.jar" 
	dir="../test_output/japtTests">
	<commandLine>com.ibm.ive.tools.japt.testcase.TestJSR</commandLine>
	<classPath>../tests</classPath>
	<japtApplicationArgs>-includeMethod com.ibm.ive.tools.japt.testcase.TestJSR.main(java.lang.String[])</japtApplicationArgs>
</testApp>

<testApp
	log="../test_output/japtedJapt.log" 
	stdout="../test_output/japtedJapt.out.txt" 
	stderr="../test_output/japtedJapt.err.txt" 
	jar="../test_output/japtedJapt.jar"
	outputIndexFromEnd="42" 
	dir="../test_output/japtTests">
	<commandLine>
		com.ibm.ive.tools.japt.commandLine.Main
		-icp ../tests/Japt.jar 
		-cp C:\java\ibm-java-sdk-60-win-x86_64\sdk\jre\lib\rt.jar
		-obfuscate -reduce -xta -inline -inlineMethodJSRs ?*parseCommandLine -inlineAllJSRs 
		-compressionInline -expandPermissions -jarOutput -output "../test_output/japtFinalized.jar" 
		-noStripDebugInfo 
		-includeMethod com.ibm.ive.tools.japt.commandLine.Main.main 
		-includeLibraryClass *.load.*Extension 
		-includeLibraryClass *.reduction.*Extension 
		-includeLibraryClass *.inline.*Extension 
		-includeLibraryClass *.commandLine.*Extension 
		-includeLibraryClass *.devirtualization.*Extension 
		-includeLibraryClass *.out.*Extension 
		-includeLibraryClass *.obfuscation.*Extension 
		-includeLibraryClass com.ibm.ive.tools.japt.MsgHelp*
		-includeResource *.properties
	</commandLine>
	<classPath>../tests/Japt.jar</classPath>
	<japtApplicationArgs>
		-includeMethod com.ibm.ive.tools.japt.commandLine.Main.main
		-includeLibraryClass com.ibm.ive.tools.japt.*Extension 
		-includeResource *.properties
		-includeMethod com.ibm.ive.tools.japt.MsgHelp$1.run()
		-includeMethod com.ibm.jikesbt.MsgHelp$1.run()
	</japtApplicationArgs>
</testApp>

<testApp
	log="../test_output/japtedFloatSanity.log" 
	stdout="../test_output/japtedFloatSanity.out.txt" 
	stderr="../test_output/japtedFloatSanity.err.txt" 
	jar="../test_output/japtedFloatsanity.jar" 
	dir="../test_output/japtTests">
	<commandLine>j9vm.floatsanity.Runner</commandLine>
	<classPath>../tests/floatsanity.jar</classPath>
	<japtApplicationArgs>-includeMainMethod j9vm.floatsanity.Runner</japtApplicationArgs>
</testApp>

<testApp
	log="../test_output/japtedHanoi.log" 
	stdout="../test_output/japtedHanoi.out.txt" 
	stderr="../test_output/japtedHanoi.err.txt" 
	jar="../test_output/japtedHanoi.jar" 
	dir="../test_output/japtTests">
	<commandLine>com/ibm/ivj/examples/hanoi/Hanoi 12</commandLine>
	<classPath>../tests/hanoi.jar</classPath>
	<japtApplicationArgs>-includeMainMethod com/ibm/ivj/examples/hanoi/Hanoi</japtApplicationArgs>
</testApp>

<testApp
	log="../test_output/japtedPhilosophers.log" 
	stdout="../test_output/japtedPhilosophers.out.txt" 
	stderr="../test_output/japtedPhilosophers.err.txt" 
	jar="../test_output/japtedPhilosophers.jar" 
	dir="../test_output/japtTests">
	<commandLine>VMBench.diningphilosophers.DiningPhilosophers</commandLine>
	<classPath>../tests/philosophers.jar</classPath>
	<japtApplicationArgs>-includeMainMethod VMBench.diningphilosophers.DiningPhilosophers -includeMethodEx VMBench.diningphilosophers.DiningPhilosophers.run</japtApplicationArgs>
</testApp>

<testApp
	log="../test_output/japtedVich.log" 
	stdout="../test_output/japtedVich.out.txt" 
	stderr="../test_output/japtedVich.err.txt" 
	jar="../test_output/japtedVich.jar"
	outputIndexFromEnd="24" 
	dir="../test_output/japtTests">
	<commandLine>vich/runner/Menu 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 8</commandLine>
	<classPath>../tests/vich.jar</classPath>
	<japtApplicationArgs>-includeMainMethod vich.runner.Menu -includeMethod vich.bench.^.run</japtApplicationArgs>
</testApp>

<testApp
	log="../test_output/japtedCaffeine.log" 
	stdout="../test_output/japtedCaffeine.out.txt" 
	stderr="../test_output/japtedCaffeine.err.txt" 
	jar="../test_output/japtedCaffeine.jar"
	outputStartIndex="0" outputEndIndex="13" 
	dir="../test_output/japtTests">
	<commandLine>CaffeineMarkEmbeddedApp</commandLine>
	<classPath>../tests/caffeine.jar</classPath>
	<japtApplicationArgs>-includeMainMethod CaffeineMarkEmbeddedApp</japtApplicationArgs>
</testApp>

<testApp 
	log="../test_output/japtedchessBM.log" 
	stdout="../test_output/japtedchessBM.out.txt" 
	stderr="../test_output/japtedchessBM.err.txt" 
	jar="../test_output/japtedchessBM.jar" 
	outputStartIndex="0" outputEndIndex="170" 
	dir="../test_output/japtTests">
	<commandLine>com.sun.mep.bench.main -r 2</commandLine>
	<classPath>../tests/eembc/chessBM.jar</classPath>
	<japtApplicationArgs>-includeMainMethod com.sun.mep.bench.main -includeResource *.txt -includeLibraryClass com.sun.mep.bench.Chess.ChessBenchmark</japtApplicationArgs>
</testApp>

<testApp 
	log="../test_output/japtedcryptoBM.log" 
	stdout="../test_output/japtedcryptoBM.out.txt" 
	stderr="../test_output/japtedcryptoBM.err.txt" 
	jar="../test_output/japtedcryptoBM.jar" outputStartIndex="0" outputEndIndex="170" 
	dir="../test_output/japtTests">
	<commandLine>com.sun.mep.bench.main -r 2</commandLine>
	<classPath>../tests/eembc/cryptoBM.jar</classPath>
	<japtApplicationArgs>-includeMainMethod com.sun.mep.bench.main -includeResource *.txt -includeLibraryClass com.parthus.CryptoBench.CryptoBench</japtApplicationArgs>
</testApp>

<testApp 
	log="../test_output/japtedkxmlBM.log" 
	stdout="../test_output/japtedkxmlBM.out.txt" 
	stderr="../test_output/japtedkxmlBM.err.txt" 
	jar="../test_output/japtedkxmlBM.jar" outputStartIndex="0" outputEndIndex="170" 
	dir="../test_output/japtTests">
	<commandLine>com.sun.mep.bench.main -r 2</commandLine>
	<classPath>../tests/eembc/kxmlBM.jar</classPath>
	<japtApplicationArgs>-includeMainMethod com.sun.mep.bench.main -includeResource *.txt -includeResource *.xml -includeResource *.cmd -includeLibraryClass com.hp.kXML.kxmlBenchmark</japtApplicationArgs>
</testApp>

<testApp 
	log="../test_output/japtedparallelBM.log" 
	stdout="../test_output/japtedparallelBM.out.txt" 
	stderr="../test_output/japtedparallelBM.err.txt" 
	jar="../test_output/japtedparallelBM.jar" 
	outputStartIndex="0" outputEndIndex="170" 
	dir="../test_output/japtTests">
	<commandLine>com.sun.mep.bench.main -r 2</commandLine>
	<classPath>../tests/eembc/parallelBM.jar</classPath>
	<japtApplicationArgs>-includeMainMethod com.sun.mep.bench.main -includeResource *.txt -includeLibraryClass com.motorola.bench.parallel.ParallelBench -includeWholeClass com.motorola.bench.parallel.data^ -includeMethod com.motorola.bench.parallel.ParallelBench$workerThread.run()</japtApplicationArgs>
</testApp>

<testApp
	log="../test_output/japtedregexpBM.log"
	stdout="../test_output/japtedregexpBM.out.txt"
	stderr="../test_output/japtedregexpBM.err.txt"
	jar="../test_output/japtedregexpBM.jar" 
	outputStartIndex="0" outputEndIndex="170" 
	dir="../test_output/japtTests">
	<commandLine>com.sun.mep.bench.main -r 2</commandLine>
	<classPath>../tests/eembc/regexpBM.jar</classPath>
	<japtApplicationArgs>-includeMainMethod com.sun.mep.bench.main -includeResource *.txt -includeResource *.inp -includeLibraryClass com.sun.mep.bench.RegExp.RegExp</japtApplicationArgs>
</testApp>

<testApp
	log="../test_output/japtedpngdecodeBM.log"
	stdout="../test_output/japtedpngdecodeBM.out.txt"
	stderr="../test_output/japtedpngdecodeBM.err.txt"
	jar="../test_output/japtedpngdecodeBM.jar"
	outputStartIndex="0" outputEndIndex="170" 
	dir="../test_output/japtTests">
	<commandLine>com.sun.mep.bench.main -r 2</commandLine>
	<classPath>../tests/eembc/pngdecodeBM.jar</classPath>
	<japtApplicationArgs>-includeMainMethod com.sun.mep.bench.main -includeResource *.txt -includeResource *.png -includeLibraryClass com.sun.mep.bench.png.PNGBenchmark</japtApplicationArgs>
</testApp>

</tests>
